
%%local
from pyspark.sql import SparkSession
spark=SparkSession.builder.getOrCreate()
spark.sparkContext.getConf().getAll()
spark.sparkContext.version
!which pyspark

%%local
spark

%%local
from pyspark.sql import SparkSession
from sagemaker_pyspark import classpath_jars # for S3 access
#spark=SparkSession.builder.config("spark.driver.extraClassPath", ":".join(classpath_jars())).config('spark.jars.packages','org.apache.spark:spark-avro_2.11:2.4.0').getOrCreate()
spark=SparkSession.builder.config('spark.jars.packages','org.apache.spark:spark-avro_2.11:2.4.0').config("spark.driver.extraClassPath", ":".join(classpath_jars())).config('spark.jars','file:///home/ec2-user/.ivy2/jars/org.apache.spark_spark-tags_2.11-2.4.0.jar,file:///home/ec2-user/.ivy2/jars/org.apache.spark_spark-avro_2.11-2.4.0.jar,file:///home/ec2-user/.ivy2/jars/org.spark-project.spark_unused-1.0.0.jar').getOrCreate()
spark=SparkSession.builder.config('spark.jars.packages','org.apache.spark:spark-avro_2.11:2.4.0').getOrCreate()
# spark.conf.set('spark.jars.packages','org.apache.spark:spark-avro_2.11:2.4.0')
#dF = spark.read.format("avro").load("/home/ec2-user/0.avro").show()
dF = spark.read.format("avro").load("s3a://sfdmdb/SF_CASE_VW/ymd=2018*/0.avro").count()
#spark.sparkContext.getConf().getAll()
#terminfo = spark.read.parquet("s3a://qaessential/jup2_stats.terminal_info/ymd=20181101").show()

%%local
dF

%%configure -f
{ "conf": {"spark.jars.packages": "org.apache.spark:spark-avro_2.11:2.4.0" }}

#spark.conf.set('spark.jars.packages','org.apache.spark:spark-avro_2.11:2.4.0')
spark.read.format("avro").load("s3a://sfdmdb/SF_CASE_VW/ymd=20181101/0.avro").show()

#spark.hadoop.parquet.enable.summary-metadata false
#spark.sql.parquet.mergeSchema false
#spark.sql.parquet.filterPushdown true
#spark.sql.hive.metastorePartitionPruning true
terminfo = spark.read.parquet("s3a://qaessential/jup2_stats.terminal_info/ymd=20181101").select('year','month','day','device_id','hw_type','absolute_beam_id')
vsatlmtd = spark.read.parquet("s3a://qaessential/jup2_stats.vsat_stcd/ymd=20181101").select('year','month','day','device_id','statecode','statecodeduration')
terminfo.createOrReplaceTempView("terminfo")
vsatlmtd.createOrReplaceTempView("vsatlmtd")
vsatlmtd_e=vsatlmtd.join(terminfo,['year','month','day','device_id'])
vsatlmtd_e.explain()
vsatlmtd_e.show()

%%info

%%configure -f 
{"numExecutors":3, "executorMemory": "5G", "executorCores":3}

%%sql -o result
select * from terminfo join vsatlmtd on terminfo.year=vsatlmtd.year and terminfo.month=vsatlmtd.month and terminfo.day=vsatlmtd.day and terminfo.device_id=vsatlmtd.device_id

%%sh
git add .
git commit -m 'ingest' -a
git push origin master
