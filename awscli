aws emr create-cluster --name SparkCluster --ami-version 3.2 --instance-type m3.xlarge --instance-count 3 --applications Name=Hive --bootstrap-actions Path=s3://support.elasticmapreduce/spark/install-spark --service-role EMR_DefaultRole --ec2-attributes KeyName=KeyPair,InstanceProfile=EMR_EC2_DefaultRole
wget http://s3.amazonaws.com/qa.hughes.com/qa_splunk_tutorial.html
aws s3 cp bulkcsv.sh s3://echiutest
aws s3 sync s3://echiutestss3 s3://qa.hughes.com
s3cmd sync 
aws emr describe-cluster --cluster-id j-1C7VNEHU4RINP
scp -i awskey2.pem readme.txt ec2-user@54.86.19.253:~
 ec2-create-keypair --aws-access-key AKIAJA2O6XN4CHG463TQ --aws-secret-key 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 mykeypair
ssh -i awskey2.pem ec2-user@54.86.19.253
ssh -i KeyPair.pem hadoop@54.86.19.253
aws emr describe-cluster --cluster-id

From sqlWorkBench move data to redshift:
copy users from 's3://awssampledb/tickit/allusers_pipe.txt' CREDENTIALS 'aws_access_key_id=AKIAJA2O6XN4CHG463TQ;aws_secret_access_key=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' delimiter '|';
39/testredshift

aws dynamodb create-table --table-name MusicCollection --attribute-definitions AttributeName=Artist,AttributeType=S AttributeName=SongTitle,AttributeType=S --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1 

aws dynamodb put-item --table-name MusicCollection --item '{ "Artist": {"S": "No One You Know"}, "SongTitle": {"S": "Call Me Today"} , "AlbumTitle": {"S": "Somewhat Famous"} }' --return-consumed-capacity TOTAL 

aws dynamodb put-item --table-name MusicCollection --item '{ "Artist": {"S": "Acme Band"}, "SongTitle": {"S": "Happy Day"} , "AlbumTitle": {"S": "Songs About Life"} }' --return-consumed-capacity TOTAL 
aws ec2 create-security-group --group-name MySecurityGroup --description "My security group"
aws ec2 authorize-security-group-ingress --group-name MySecurityGroup --protocol tcp --port 22 --cidr 0.0.0.0/0 
aws ec2 run-instances  --image-id ami-cf1066aa --count 1 --instance-type m3.xlarge --iam-instance-profile Name="EMR_EC2_DefaultRole" --key-name awskey2 --security-groups MySecurityGroup 
aws ec2 describe-security-groups --group-ids sg-sc5aaeeb
aws ec2 terminate-instances --image-id 

# launching spark on EC2 1.5.0 does complains about /tmp/hive not writable
export AWS_ACCESS_KEY_ID=AKIAJA2O6XN4CHG463TQ 
export AWS_SECRET_ACCESS_KEY=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
#/mnt/spark-1.5.0/ec2/spark-ec2 --key-pair=awskey2 --identity_file=~echiu/aws/awskey2.pem --slave=1 launch SparkCluster
/mnt/spark-1.5.0/ec2/spark-ec2 -k awskey2 -i ~echiu/aws/awskey2.pem -s 1 --spark-version=1.4.1 launch SparkCluster
parallel s3cmd sync --dry-run 7/{}/ s3://lmtd/2015/7/{}/ ::: 22 23 24 25 26 27 28 29
parallel s3cmd sync 7/{}/ s3://lmtd/2015/7/{}/ ::: 22 23 24 25 26 27 28 29

# training
git clone git://github.com/amplab/training-scripts.git
yum install python-pip
pip install --upgrade awscli

